Press q to dismiss. Tab to Lose Focus
: is mapped to ;  | <esc> jk | <L>?
# -------------------------------------
Commands      | {{{2
# -------------------------------------
:Coloron    - Colorizer On
:Coloroff   - Colorizer Off
:Colorflip  - Color Flip
:Cheat
:Editcheat   - Edit this file

:reg "<reg #/Alpha> <cmd> | "myy

:Foldon     - Folding
:Ln         - Toggle Line Numbers

:Iline     - Toggle Indent
:Tagbar    - Tagbar Toggle

:WW         - Save & Close Buffer

:Undotreetoggle

:Timestamp  - Insert Timestamp

Edit Jumps {{{3
 :Erc      - Files: nvim rc files
 :Appdev   - Files: AppDev

}}}

---- Fix these
  :ut unto tree
  :WipeReg    - Purge all Registers
  :yr         - Yank Ring
  :freekeys   - Vim Current Keymap
}}}
Insert Mode   | {{{2
  <C-r>    - Reg Peek (<Spc> Tog Full Scn)
}}}
Key Bindings  | {{{2
# -------------------------------------
  f/F - Clever F

Reg / Marks / Buf / Jumps {{{
# -------------------------------------
 " or @          - Peek-a-Boo on righ screen
 <Crtl-r>        - Show "/@ in Insert Mode
  "    " <Space> - Full screen

  To select:
  - Press Reg you want. Then P to paste


# -------------------------------------
}}}

Search {{{3
# -------------------------------------
 <L>g      - Goto last locations
 <L> *     - Search & Replace under cur
" or @     - Reg Peek (<Spc> Tog Full Scn)
  <C-r>    - Reg Peek (Insert Mode)
 #si       - Insert # Space/s
 \\        - Ag Prompt
 \|        - Ag Word Under Cursor

-[ FZF: {{{4
 :FZF        - Fuzzzy Find
 :Fh         - History
 :Ff         - Files
 :Fb         - Buffers
 :Ft         - Tags
 :Fm         - Marks
 :Ag
 :Mru        - Mru list
 :Fz         - CWD File List
}}}
-[ Easymotion: {{{4
 sc         - Search 2 Char
 ss         - Search String
}}}

# -------------------------------------
}}}
Edit  {{{3
# -------------------------------------
 Alt HJKL     - Move Line/s
 C-A-k or gO  - Add line above
 C-A-j or go  - Add line below

cw, c(, c[, c{, c<  - Change Abbr.


-[ Buffer {{{4
 Bx         - Bwipeout
 Bxx        - Bwipeout!
 BX         - The hammer
 Sx         - Sayonara
 Sxx        - Sayonara!
}}}

<L> y    - Cut into Special buffer
<L> p    - Paste from Special buffer
<L> gc   - Dupe line comment orig
<L>w     - Save buffer
<L> ``   - Close all Buffers No Save
<L>--    - Remove whitespaces

# -------------------------------------
}}}
Nav {{{3
# -------------------------------------
 HH       - Left Margin
 Hh       - BOL
  L       - EOL
 <C-j>    - Scroll Download
 <C-k>    - Scroll Up

 <L> cd   - Update PWD to current dir
 <L> .    - Next buffer
 <L> ,    - Prev buffer

 <L>tb  - Tagbar Toggle

# -------------------------------------
}}}

# -------------------------------------
}}}
# -------------------------------------
Plugins to Add {{{3
}}}
Neoterm       | {{{2
<C-w>tv - New Terminal Vert
<C-w>Ts - New Terminal Horz

Ntv   - vertical Tnew
Nts   - belowright Tnew

Ntc   - Tclear!
Ntk   - Tkill (running process)
Nto   - Topen
Ntx   - Tclose
NtX   - Tclose!
Ntp   - T Python %

# -------------------------------------
}}}
Netrw         |  {{{2
:NetrwClean[!]
:NetrwSettings
:Ntree
:Explore[!]  [dir] Explore directory of current file
:Hexplore[!] [dir] Horizontal Split & Explore
:Lexplore[!] [dir] Left Explorer Toggle
:Nexplore[!] [dir] Vertical Split & Explore
:Pexplore[!] [dir] Vertical Split & Explore
:Rexplore          Return to Explorer
:Sexplore[!] [dir] Split & Explore directory
:Texplore[!] [dir] Tab & Explore
:Vexplore[!] [dir] Vertical Split & Explore

  Map			Quick Explanation			Link
  ---			-----------------			----
 <F1>	Causes Netrw to issue help
 <cr>	Netrw will enter the directory or read the file
 <del>	Netrw will attempt to remove the file/directory
 <c-h>	Edit file hiding list
 <c-l>	Causes Netrw to refresh the directory listing
 <c-r>	Browse using a gvim server
 <c-tab> Shrink/expand a netrw/explore window
   -	Makes Netrw go up one directory
   a	Toggles between normal display,
    	hiding (suppress display of files matching g:netrw_list_hide)
    	showing (display only files which match g:netrw_list_hide)
   c	Make browsing directory the current directory
   C	Setting the editing window
   d	Make a directory
   D	Attempt to remove the file(s)/directory(ies)
   gb	Go to previous bookmarked directory
   gd	Force treatment as directory
   gf	Force treatment as file
   gh	Quick hide/unhide of dot-files
   gn	Make top of tree the directory below the cursor
   i	Cycle between thin, long, wide, and tree listings
   mb	Bookmark current directory
   mc	Copy marked files to marked-file target directory
   md	Apply diff to marked files (up to 3)
   me	Place marked files on arg list and edit them
   mf	Mark a file
   mF	Unmark files
   mg	Apply vimgrep to marked files
   mh	Toggle marked file suffices' presence on hiding list
   mm	Move marked files to marked-file target directory
   mp	Print marked files
   mr	Mark files using a shell-style |regexp|
   mt	Current browsing directory becomes markfile target
   mT	Apply ctags to marked files
   mu	Unmark all marked files
   mv	Apply arbitrary vim   command to marked files
   mx	Apply arbitrary shell command to marked files
   mX	Apply arbitrary shell command to marked files en bloc
   mz	Compress/decompress marked files
   o	Enter the file/directory under the cursor in a new
    	browser window.  A horizontal split is used.
   O	Obtain a file specified by cursor
   p	Preview the file
   P	Browse in the previously used window
   qb	List bookmarked directories and history
   qf	Display information on file
   qF	Mark files using a quickfix list
   qL	Mark files using a |location-list|
   r	Reverse sorting order
   R	Rename the designated file(s)/directory(ies)
   s	Select sorting style: by name, time, or file size
   S	Specify suffix priority for name-sorting
   t	Enter the file/directory under the cursor in a new tab
   u	Change to recently-visited directory
   U	Change to subsequently-visited directory
   v	Enter the file/directory under the cursor in a new
    	browser window.  A vertical split is used.
   x	View file with an associated program
   X	Execute filename under cursor via |system()|

   %	Open a new file in netrw's current directory
"}}}
Git           | {{{2
}}}
Completion    | {{{2
# -------------------------------------
COC:
 Y         - Yankring
 C-Space   - Trigger Completion
 K         - Show Documentation
 gd        - Defintion
 gy        - Type Definition
 gi        - Implementation
 gr        - Reference
 <L> rn    - Rename
 <L> fr    - Format Selected
 <L> fa    - Format Buffer

Cocext  - extentions
Cocmd   - list commands
Cocout  - list outline
Cocnext - ?

# -------------------------------------
}}}
Window        | {{{2
# -------------------------------------
C-w c   - Close Window

C-w n   - Split Buffer - Horz
C-w N   - New Buffer   - Horz

C-w v   - Split Buffer - Vert
C-w V   - New Buffer   - Vert

C-w t   - New Terminal - Vert
C-w T   - New Terminal - Horx

Arrows  - Resize Window Splits

 C-w ]   - Slide Window
 C-w [   - Recenter

C-w C-s - Toggle Split

Alt-d   - Scroll Other Window Down
Alt-u   - Scroll Other Window Up

C-W (hjkl) - Switch to Window
# -------------------------------------
}}}
Wiki          | {{{2
# -------------------------------------
<L> (n) ww  - Open a Wiki
<L> (n) wt  - Open a Wiki new Tab
<L> ws      - List Wikis
<L> (n) wi  - Open Diary Index
<L> wh      - Convert current wiki page to HTML.
<L> whh       Convert current wiki page to HTML and open it in the
<L> wr        Rename wiki page you are in.
<L> wd        Delete wiki page you are in.
<L> wv        Wiki V Split
}}}
Writting      | {{{2
# -------------------------------------
 <C-s> s  - Got Next Spelling Error
 <C-s> k  - Spell Word

Spelling - Vim keys {{{3
# -------------------------------------
zg       Add word under the cursor as a good word to the first
         name in 'spellfile'.  A count may precede the command
         to indicate the entry in 'spellfile' to be used.  A
         count of two uses the second entry.

         In Visual mode the selected characters are added as a
         word (including white space!).
         When the cursor is on text that is marked as badly
         spelled then the marked text is used.
         Otherwise the word under the cursor, separated by
         non-word characters, is used.

         If the word is explicitly marked as bad word in
         another spell file the result is unpredictable.


zG       Like "zg" but add the word to the internal word list
         |internal-wordlist|.


zw       Like "zg" but mark the word as a wrong (bad) word.
         If the word already appears in 'spellfile' it is
         turned into a comment line.  See |spellfile-cleanup|
         for getting rid of those.


zW       Like "zw" but add the word to the internal word list
         |internal-wordlist|.

zuw
zug      Undo |zw| and |zg|, remove the word from the entry in
         'spellfile'.  Count used as with |zg|.

zuW
zuG      Undo |zW| and |zG|, remove the word from the internal
         word list.  Count used as with |zg|.
# -------------------------------------
}}}

:gram      - Grammerly Check
:gramreset - Reset Grammerly
# -------------------------------------
}}}
Markdown      | {{{2
# -------------------------------------
Preview:
    :Mdp  - Preview
    :Mds  - Preview Stop


tm      : Table Mode Toggle
        -  Insert Mode can use
        -  || to turn on
        -  -- to turn off

tt      - CSV to Table
T       - Ask for Delimter
tdd     - Delete Row
tdc     - Delete Col

C-w m   - Md Composer Browser
:mdshow      ""       ""


}}}
Startify      | {{{2
# -------------------------------------
:startify     Strartify
:startsave    SSave
:startclose   SClose
:startload    SLoad
:startdelete  SDelete
}}}
Airline {{{2
# -------------------------------------
  Airt  - Airline Toggle
  Airw  - Airline Toggle Whitespace
  Airr  - Refresh
  Aire  - Extentions

  <L> 1 - 9 - Got to # Tab
# -------------------------------------
}}}
NeoFormat {{{2
 :Nf    - Calls NeoFormat
 :Nfp   - Formats Python
}}}
Yank-Ring     |  {{{2
#--------------------------------------------
  Key/Command    Description
#--------------------------------------------
   Yr           YRGetElem
   Yroff        YRToggle 0
   Yron         YRToggle 1
   Yrclear      YRClear
   Yrpop        YRPop
   Yr/          YRSearch
   ------------------------------------------

  p             Puts text after the cursor.  In visual mode, all elements
                selected will be pasted.
  P             Puts text before the cursor.  In visual mode, all elements
                selected will be pasted.
  gp            Just like "p", but leave the cursor just after the new text.
  gP            Just like "P", but leave the cursor just after the new text.
  <CR>          Just like "p".
  <Enter>       Just like "p".
  <2-LeftMouse> Just like "p".  Normal mode only.
  1-9           Shortcut to paste the n'th number from the YankRing.
  d             Removes the element from the yankring.  In visual mode all
                elements selected will be removed.
  r             Just like "p", but in visual mode if many lines are selected
                it will paste these items in reverse order.
  s             Prompts you for a regex to search the YankRing and display
                only matching items.
  a             Toggles the g:yankring_window_auto_close setting.
  u             Updates the YankRing window.
  q             Closes the YankRing window.
  <Space>       Toggles the width of the vertical window by the
                g:yankring_window_increment setting.
  ?             Toggles the display of the help.
#--------------------------------------------
}}}


#
# ---------[ VIM Referece ]---------
About {{{2
  Abbreviations used in descriptions:

  »      Forwards/rightwards
  «      Backwards/leftwards
  WORD   Space-delimited word

  Notation for key sequences:

  \      Leader (see `<leader>`)
  ‹r›    A register (", *, 0, 1, …)
         See `registers`
  ‹Move› A motion or a text object
         See `$VIMRUNTIME/doc/motion.txt`
         See `text-objects`
  ‹P›    A regular expression (pattern)
         See `$VIMRUNTIME/doc/pattern.txt`
  ‹Cmd›  An Ex command
         See `$VIMRUNTIME/doc/cmdline.txt`
  ‹Var›  A variable or option name
         See `variables`
         See `$VIMRUNTIME/doc/options.txt`
  ‹c›    A single character
  ‹n›    A (possibly optional) number
  …      Any text
  «C-…»  Press ctrl and … together
  «Spc»  Press space bar
  «CR»   Press Enter

  Similarly, other special keys are
  written between « and ». All other
  characters are meant to be typed
  literally.

  Note that spaces are made explicit
  only when it is not obvious that a
  space must be used (e.g., \«Spc», that
  is, leader followed by space). Ditto
  for «CR».

  Labels:

  N    Type in Normal mode
  C    Type in Command mode
  I    Type in Insert mode
  V    Type in Visual mode
  M    Motion (may be used by itself or
       after an operator)
  T    Text object (use in Visual mode
       or after an operator)
  O    Operator (use in Visual mode, or
       before a motion or a text object)
  *    Acts on text under/after cursor
}}}
File {{{2
New untitled document    :enew         N
New/open file or dir     :e …          N
Split open (horizontal)  :sp …         N
Split open (vertical)    :vs …         N
Reopen last opened file  «C-o»«C-o»    N
Open with external app   gx           *N
File explorer (Netrw)    :Ex           N
Close file               :bd           N
Close all                :%bd          N
Save                     :w            N
Save (only if modified)  :up           N
Save as…                 :sav …        N
Save all                 :wa           N
Save read-only file      :w!           N
Save session             :mks          N
# To restore, run `vim -S`
Reload file from disk    :e            N
Revert to last saved     :e!           N
# Unsaved changes are lost!
Convert buffer to HTML   :TOhtml       N
Print document           :hardcopy     N
Quit (window)            :q            N
Save and quit (window)   :x            N
Ditto                    ZZ            N
Quit without saving      :q!           N
Ditto                    ZQ            N
Save all and exit Vim    :xa           N
Exit Vim without saving  :qa!          N
File Explorer (Netrw) {{{2
Open file/directory      «CR»         *N
Open in horizontal split o            *N
Open in vertical split   v            *N
Open in a new tab        t            *N
Open with external app   x            *N
New file here            %             N
New directory here       d             N
Mark file                mf           *N
Mark using shell glob    mr            N
Unmark all               mu            N
Edit marked files        me            N
Rename file(s)           R            *N
Delete file(s)           D            *N
Refresh file list        «C-l»         N
File info                qf           *N
Toggle hidden files      a             N
Switch file list format  i             N
Exit file explorer       :Rex          N
}}}
Edit {{{2
Basics {{{3
Back to normal mode      «Esc»      NIVC
Ditto                    «C-[»      NIVC
Cancel command/operation «C-c»      NIVC
Insert at cursor pos.    i             N
Append after the cursor  a             N
Insert at start of line  I             N
Append at end of line    A             N
Open new line below      o             N
Open new line above      O             N
Replace character        r‹c›         *N
Replace mode/overwrite   R             N
Change                   c             O
Replace line             cc            N
Repeat last command      .             N
}}}
Undo                     u             N
Redo                     «C-r»         N
Next text state          g+            N
Prev text state          g-            N
Cut                      d             O
Cut into register ‹r›    "‹r›d         O
Cut into OS clipboard    "*d           O
Cut ‹n› lines            ‹n›dd         N
Cut until the EOL        D             N
Cut ‹n› characters »     ‹n›x          N
Cut ‹n› characters «     ‹n›X          N
Cut all                  :%d           N
Copy                     y             O
Copy into register ‹r›   "‹r›y         O
Copy into OS clipboard   "*y           O
Copy ‹n› lines           ‹n›yy         N
Copy until the EOL       y$            N
Copy all                 :%y           N
Paste after cursor       p            VN
Paste before cursor      P            VN
Paste from register ‹r›  "‹r›p        VN
Paste from register ‹r›  «C-r»‹r›     IC
Paste from OS clipboard  "*p          VN
Paste after and align    ]p           VN
Paste before and align   ]P           VN
Visual mode (select)     v             N
Linewise visual mode     V             N
Block visual mode        «C-v»         N
Insert in selected lines «C-v»‹Move›I  N
Append to selected lines «C-v»‹Move›A  N
Change in selected lines «C-v»‹Move›c  N
Delete in selected lines «C-v»‹Move›x  N
Reselect                 gv            N
Select all               ggVG          N
Delete previous word     «C-w»        IC
Erase line before cursor «C-u»        IC
Start recording macro    q‹r›          N
# Press q to stop recording
Run recorded macro       @‹r›          N
Repeat last macro        @@            N
Repeat last Ex command   @:            N
Run cmd in all buffers   :bufdo ‹Cmd›  N
Text {{{2
Objects {{{3
Around word              aw            T
Inside word              iw            T
Around WORD              aW            T
Inside WORD              iW            T
Around sentence          as            T
Inside sentence          is            T
Around paragraph         ap            T
Inside paragraph         ip            T
Around parentheses       a(            T
Ditto                    ab            T
Inside parentheses       i(            T
Ditto                    ib            T
Around brackets          a[            T
Inside brackets          i[            T
Around braces            a{            T
Ditto                    aB            T
Inside braces            i{            T
Ditto                    iB            T
Around (XML) tags        at            T
Inside (XML) tags        it            T
Around < and >           a<            T
Inside < and >           i<            T
Around double quotes     a"            T
Inside double quotes     i"            T
Around simple quotes     a'            T
Inside simple quotes     i'            T
Around backticks         a`            T
Inside backticks         i`            T
}}}
Change to uppercase      gU            O
Change to lowercase      gu            O
Uppercase line           gUU           N
Lowercase line           guu           N
Change to uppercase      U             V
Change to lowercase      u             V
Toggle case              ~            *N
Toggle case              ~             V
Indent   (. to repeat)   >             O
Unindent (. to repeat)   <             O
Reindent                 =             O
Indent line (. repeats)  >>            N
Unindent    (. repeats)  <<            N
Reindent line            ==            N
Indent line              «C-t»         I
Unindent line            «C-d»         I
Hard-wrap (cursor moves) gq            O
Hard-wrap (cursor stays) gw            O
Format current line      gww           N
Join with next line      J             N
Ditto, preserve spaces   gJ            N
Use hard tabs            :set noet     N
Use soft tabs (spaces)   :set et       N
Detab (needs 'et' on)    :retab        N
Entab (needs 'et' off)   :retab!       N
Toggle spell checking    :setl spell!  N
To next misspelled word  ]s            N
To prev misspelled word  [s            N
Suggest corrections      z=           *N
Suggest corrections      «C-x»s        I
Set text width           :set tw=‹n›   N
Sort selected lines      :sort         V
Sort+remove duplicates   :sort u       V
Run macro for each line  :norm @‹r›    V
Run Cmd on lines =~ ‹P›  :g/‹P›/‹Cmd› VN
Autocomplete (search »)  «C-n»         I
Autocomplete (search «)  «C-p»         I
Omnicomplete             «C-x»«C-o»    I
Line autocomplete        «C-x»«C-l»    I
Insert digraph           «C-k»‹c›‹c›   I
Insert calculated expr.  «C-r»=        I
Increment number         ‹n›«C-a»     *N
Decrement number         ‹n›«C-x»     *N
View {{{2
Scrolling {{{3
Scroll down a page       «C-f»         N
Scroll up a page         «C-b»         N
Scroll down half a page  «C-d»         N
Scroll up half a page    «C-u»         N
Scroll down a bit        «C-e»         N
Scroll up a bit          «C-y»         N
Scroll right             ‹n›zl         N
Scroll left              ‹n›zh         N
Scroll » half a screen   zL            N
Scroll « half a screen   zH            N
Scroll line to the top   zt            N
Scroll to the bottom     zb            N
Scroll to the center     zz            N
}}}
Toggle soft-wrapping     :setl wrap!   N
Page guide at column n   :setl cc=‹n›  N
No page guide            :setl cc=     N
Toggle line numbers      :setl nu!     N
Toggle rel. line numbers :setl rnu!    N
Toggle invisibles        :setl list!   N
Fold                     zc           *N
Unfold                   zv           *N
Toggle fold              za           *N
Fold all                 zM            N
Unfold all               zR            N
Show files               :ls           N
Edit… (autocomplete)     :b «Tab»      N
Edit buffer ‹n›          :b‹n›         N
Ditto                    ‹n›«C-^»      N
Edit last edited file    «C-^»         N
Edit next buffer         :bn           N
Edit prev buffer         :bp           N
Edir prev in arg list    :prev         N
Edir next in arg list    :next         N
Get file info            «C-g»         N
Character info           ga           *N
Line/word/char count     g«C-g»       VN
Toggle cursorline        :setl cul!    N
Toggle search highlight  :setl hls!    N
Search {{{2
Toggle ignore case       :set ic!      N
Search forward           /‹P›          M
Search backward          ?‹P›          M
Jump » to match          n             M
Jump « to match          N             M
Select up to next match  gn            M
Select up to prev match  gN            M
Search » for this word   *            *M
Search « for this word   #            *M
Find and replace         :s/‹P›/‹P›/g  V
Ditto, ask to confirm    :s/‹P›/‹P›/gc V
Find and replace all     :%s/‹P›/‹P›/g N
Prev in quickfix list    :cp           N
Next in quickfix list    :cn           N
Prev in location list    :lp           N
Next in location list    :lne          N
Next command             «C-n»         C
Prev command             «C-p»         C
Browse command history   q:            N
Browse command history   «C-f»         C
# Use «C-c» to return to command prompt
Browse » search patterns q/            N
Browse « search patterns q?            N
Differences {{{3
Use this file for diff   :diffthis     N
Exit diff mode           :diffoff!     N
Re-scan files for diffs  :diffupdate   N
Next difference          ]c            N
Prev difference          [c            N
Diff put                 dp            N
Diff obtain              do            N
Get differences          :diffget      V
Put differences          :diffput      V
}}}
Go {{{2
Basic movement {{{3
Left                     h             M
Right                    l             M
Up                       k             M
Down                     j             M
Up (honor soft-wrapping) gk            M
Down (ditto)             gj            M
Start of next word       w             M
Start of prev word       b             M
End of next word         e             M
End of prev word         ge            M
Start of next WORD       W             M
Start of prev WORD       B             M
End of next WORD         E             M
End of prev WORD         gE            M
Start of line            0             M
End of line              $             M
This line 1st non-blank  ^             M
Next line 1st non-blank  +             M
Prev line 1st non-blank  -             M
First line               gg            M
Last line                G             M
}}}
Next ‹c› in this line    f‹c›          M
Just before next ‹c›     t‹c›          M
Prev ‹c› in this line    F‹c›          M
Just after prev ‹c›      T‹c›          M
Repeat f/t/F/T »         ;             M
Repeat f/t/F/T «         ,             M
Prev pos in change list  g;            N
Next pos in change list  g,            N
Go to line ‹n›           :‹n›          M
Go to column ‹n›         ‹n›|          M
Jump to line ‹n›         ‹n›G          M
Jump to next blank line  }             M
Jump to prev blank line  {             M
Jump to begin of block   [{            M
Jump to end of block     ]}            M
Jump to end of sentence  )             M
Jump to beg. of sentence (             M
Jump to end of section   ]]            M
Jump to beg. of section  [[            M
Jump to top of window    H             M
Jump to middle           M             M
Jump to bottom           L             M
Jump to matching delim   %             M
Jump to specified tag    :tag …        N
Jump to older tag        «C-t»         N
Jump to tag definition   «C-]»        *N
Ditto, but show choices  g]           *N
Jump or show choices     g«C-]»       *N
To next matching tag     :tn           N
To prev matching tag     :tp           N
Set mark                 m‹c›          N
Jump to mark             `‹c›          M
View all marks           :marks        N
Remove marks             :delmarks …   N
Jump to definition       gd           *N
To prev jump position    «C-o»         N
To next jump position    «C-i»         N
To start of next fold    zj            N
To end of previous fold  zk            N
Window {{{2
New horizontal split     :new          N
Ditto                    «C-w»«C-n»    N
New vertical split       :vnew         N
Close window             «C-w»c        N
Close inactive windows   «C-w»«C-o»    N
Split horizontally       «C-w»s        N
Split vertically         «C-w»«C-v»    N
Exchange windows         «C-w»«C-x»    N
Move to the very top     «C-w»K        N
Move to the very bottom  «C-w»J        N
Move to the far right    «C-w»L        N
Move to the far left     «C-w»H        N
One window per file      :ball         N
Cycle through windows    «C-w»«C-w»    N
Back to previous window  «C-w»«C-p»    N
Edit window to the left  «C-w»«C-h»    N
Edit window below        «C-w»«C-j»    N
Edit window above        «C-w»«C-k»    N
Edit window to the right «C-w»«C-l»    N
Edit top window          «C-w»«C-t»    N
Edit bottom window       «C-w»«C-b»    N
All windows same size    «C-w»=        N
Maximize height          «C-w»_        N
Maximize width           «C-w»|        N
Decrease height          «C-w»-        N
Increase height          «C-w»+        N
Decrease width           «C-w»<        N
Increase width           «C-w»>        N
Exec. Cmd in all windows :windo ‹Cmd›  N
Tabs  {{{2
New untitled tab         :tabnew       N
New/open in tab          :tabe …       N
Next tab                 gt            N
Previous tab             gT            N
Go to tab n              ‹n›gt         N
Close tab                :tabc         N
Close all other tabs     :tabo         N
List tabs                :tabs         N
Move window to new tab   «C-w»T        N
Open one tab per buffer  :tab ball     N
Execute Cmd in all tabs  :tabdo ‹Cmd›  N
Help {{{2
Help about …             :h …          N
Help search              :helpgrep …   N
# Use quickfix commands
# to move between results
Help on highlight test   :h hitest.vim N
View mappings            :map …        N
View Insert mode mappings:imap …       N
View registers           :di           N
List of sourced files    :scr          N
List of digraphs         :digraphs     N
List all syntax items    :syn          N
Misc {{{2
Current directory        :pwd          N
Change directory         :cd …         N
Show the value of ‹Var›  :echo ‹Var›   N
Show value of option     :set ‹Var›?   N
}}}
